In file included from sr_router.c:22:0:
sr_router.h:84:92: error: unknown type name ‘sr_if’
 void sr_handle_ip_packet_reception(struct sr_instance* sr,uint8_t *packet,unsigned int len,sr_if *interface);
                                                                                            ^
sr_router.c: In function ‘sr_handle_arpreq’:
sr_router.c:182:37: error: ‘packets’ undeclared (first use in this function)
          send_icmp(sr,0x0003,0x0003,packets,interface);
                                     ^
sr_router.c:182:37: note: each undeclared identifier is reported only once for each function it appears in
sr_router.c:182:10: warning: passing argument 5 of ‘send_icmp’ from incompatible pointer type [enabled by default]
          send_icmp(sr,0x0003,0x0003,packets,interface);
          ^
In file included from sr_router.c:22:0:
sr_router.h:89:5: note: expected ‘struct sr_if *’ but argument is of type ‘char *’
 int send_icmp(struct sr_instance* sr, uint8_t icmp_type, uint8_t icmp_code,uint8_t *originalPacket, struct sr_if *interface);
     ^
sr_router.c: In function ‘sr_handlepacket’:
sr_router.c:316:7: warning: passing argument 4 of ‘sr_handlepacket_ip’ from incompatible pointer type [enabled by default]
       sr_handlepacket_ip(sr,packet,len,simpleRouterInterface);
       ^
In file included from sr_router.c:22:0:
sr_router.h:81:6: note: expected ‘char *’ but argument is of type ‘struct sr_if *’
 void sr_handlepacket_ip(struct sr_instance* sr,uint8_t *packet,unsigned int len,char* interface);
      ^
sr_router.c:322:57: error: expected expression before ‘)’ token
       fprintf(stderr, "Packet type Unknown, dropping.", );
                                                         ^
sr_router.c: At top level:
sr_router.c:327:6: error: conflicting types for ‘sr_handlepacket_ip’
 void sr_handlepacket_ip(struct sr_instance* sr,
      ^
In file included from sr_router.c:22:0:
sr_router.h:81:6: note: previous declaration of ‘sr_handlepacket_ip’ was here
 void sr_handlepacket_ip(struct sr_instance* sr,uint8_t *packet,unsigned int len,char* interface);
      ^
sr_router.c: In function ‘sr_handlepacket_ip’:
sr_router.c:342:7: warning: implicit declaration of function ‘sr_handle_ip_packet_reception’ [-Wimplicit-function-declaration]
       sr_handle_ip_packet_reception(sr,packet,len,interfaces);
       ^
sr_router.c: In function ‘sr_forward_handler’:
sr_router.c:362:10: warning: implicit declaration of function ‘get_interface_for_destination’ [-Wimplicit-function-declaration]
   struct sr_if* outgoingInterface = get_interface_for_destination(sr,recievedIPHeader->ip_dst);
          ^
sr_router.c:362:37: warning: initialization makes pointer from integer without a cast [enabled by default]
   struct sr_if* outgoingInterface = get_interface_for_destination(sr,recievedIPHeader->ip_dst);
                                     ^
sr_router.c:366:7: warning: passing argument 4 of ‘sr_forward_packet’ makes integer from pointer without a cast [enabled by default]
       sr_forward_packet(sr,packet,len,outgoingInterface,entryToUse->mac);
       ^
In file included from sr_router.c:22:0:
sr_router.h:83:6: note: expected ‘uint8_t’ but argument is of type ‘struct sr_if *’
 void sr_forward_packet(struct sr_instance* sr,uint8_t *packet,unsigned int len,uint8_t macAddress,struct  sr_if *outgoingInterface);
      ^
sr_router.c:366:7: warning: passing argument 5 of ‘sr_forward_packet’ from incompatible pointer type [enabled by default]
       sr_forward_packet(sr,packet,len,outgoingInterface,entryToUse->mac);
       ^
In file included from sr_router.c:22:0:
sr_router.h:83:6: note: expected ‘struct sr_if *’ but argument is of type ‘unsigned char *’
 void sr_forward_packet(struct sr_instance* sr,uint8_t *packet,unsigned int len,uint8_t macAddress,struct  sr_if *outgoingInterface);
      ^
sr_router.c:372:7: error: too few arguments to function ‘sr_handle_arpreq’
       sr_handle_arpreq(sr,request);
       ^
sr_router.c:162:6: note: declared here
 void sr_handle_arpreq(struct sr_instance *sr, struct sr_arpreq *req,
      ^
sr_router.c:379:5: warning: passing argument 4 of ‘send_icmp’ makes pointer from integer without a cast [enabled by default]
     send_icmp(sr,0x0003,0x0,*packet,interface);
     ^
In file included from sr_router.c:22:0:
sr_router.h:89:5: note: expected ‘uint8_t *’ but argument is of type ‘uint8_t’
 int send_icmp(struct sr_instance* sr, uint8_t icmp_type, uint8_t icmp_code,uint8_t *originalPacket, struct sr_if *interface);
     ^
sr_router.c: At top level:
sr_router.c:382:6: error: conflicting types for ‘sr_forward_packet’
 void sr_forward_packet(struct sr_instance* sr,
      ^
In file included from sr_router.c:22:0:
sr_router.h:83:6: note: previous declaration of ‘sr_forward_packet’ was here
 void sr_forward_packet(struct sr_instance* sr,uint8_t *packet,unsigned int len,uint8_t macAddress,struct  sr_if *outgoingInterface);
      ^
sr_router.c:398:6: warning: conflicting types for ‘sr_handle_ip_packet_reception’ [enabled by default]
 void sr_handle_ip_packet_reception(struct sr_instance* sr,
      ^
sr_router.c:342:7: note: previous implicit declaration of ‘sr_handle_ip_packet_reception’ was here
       sr_handle_ip_packet_reception(sr,packet,len,interfaces);
       ^
sr_router.c: In function ‘sr_handle_ip_packet_reception’:
sr_router.c:403:3: error: invalid initializer
   sr_ip_hdr_t ip_header = get_ip_header(packet);
   ^
sr_router.c:405:42: error: invalid type argument of ‘->’ (have ‘sr_ip_hdr_t’)
   uint8_t packets_ip_protocol = ip_header->ip_p;
                                          ^
sr_router.c:411:26: error: ‘icmp_header’ undeclared (first use in this function)
     if(is_icmp_packet_ok(icmp_header,len)){
                          ^
sr_router.c: In function ‘is_ip_packet_ok’:
sr_router.c:427:3: error: too few arguments to function ‘is_ip_chksum_ok’
   uint8_t isPacketOkay = (is_ip_chksum_ok());
   ^
In file included from sr_router.c:22:0:
sr_router.h:88:9: note: declared here
 uint8_t is_ip_chksum_ok(sr_ip_hdr_t *ip_header);
         ^
sr_router.c: In function ‘send_icmp’:
sr_router.c:498:37: warning: initialization makes pointer from integer without a cast [enabled by default]
   struct sr_if* outgoingInterface = get_interface_for_destination(sr,recievedIPHeader->ip_src);
                                     ^
sr_router.c:526:5: error: a label can only be part of a statement and a declaration is not a statement
     sr_icmp_t3_hdr_t *newICMPT3Header = get_icmp_t3_header(newPacket);
     ^
sr_router.c:536:5: error: a label can only be part of a statement and a declaration is not a statement
     sr_icmp_hdr_t *newICMPHeader = get_icmp_header(newPacket);
     ^
sr_router.c: At top level:
sr_router.c:549:15: error: conflicting types for ‘get_interface_for_destination’
 struct sr_if* get_interface_for_destination(struct sr_instance *sr, uint32_t destination) {
               ^
sr_router.c:362:37: note: previous implicit declaration of ‘get_interface_for_destination’ was here
   struct sr_if* outgoingInterface = get_interface_for_destination(sr,recievedIPHeader->ip_dst);
                                     ^
make: *** [sr_router.o] Error 1
